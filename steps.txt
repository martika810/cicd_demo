
- Added one unit test loading the website from a file

iNTEGRATION TESTS

- make an it folder under 'src'
- make a 'java' and 'resources' folder under the 'it' folder just created
- adding a feature file in the 'resources' folder
- added the cucumber dependencies in the pom.xml (cucumber and selenium)
- installed the cucumber-java plugin in intellij
- Create the entry point for the tests, passing the folder where the features are
    and the package where the stepdefinition code is

- Write the steps with no code
- Download the chrome web driver


- move the integration-test to the test folder. if you want the cucumber to be detected as integration-test then
  the class name should end with *IT
  NOTE: this bit show the maven phases: https://stackoverflow.com/questions/14105820/skipping-execution-of-surefire-because-it-has-already-been-run-for-this-configu


- Adding the execution bit in the spring-maven-plugin and add it the plugin maven-failsafe-plugin, so the integration-test
  are executed

- Run the test with 'mven clean verify -Denvironment=local'




- TODO: Link the application with the tests so if running when 'integration' or test
    phase start, first the application start and then the integration tests run with
    local as the environment



